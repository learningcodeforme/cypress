Date 4/8/24

step1 - install npm - npm init 
step 2  - npm install cypress --save--dev

cyrpess test runner - it ui

how to open it 
.\node_modules\.bin\cypress open
npx cypress open 

cypress cofig file -cypress.config.js

when cypress installed we have some folder and file  got created 
folder name - cypress
Inside cypress folder 
following folder is there 
1) downloads
2) fixture
3) support

file 
cypress.config.js


cypress.config.js -- we define file path where test is created 

 specPattern: 'cypress/Integration/examples/*.js'
  
  In Javascript we have to use testing framework 
  cypress recomanded to use mocka 


describe - -test suite 
it - test case 

*****************************************************************************
Date 5/8/2024

cypress but default run in headless mode when we run in cmd line 
default browser in electron  if we 

cypress location
 .\node_modules\.bin\cypress 


-- browser  chrome 
--headed


fixture folder - to  keep test data which we used in cypress
integration folder - to write test in under this folder 
support folder - customized command and resuable  code to get available to test 
 if define  code in support folder it automaticall avialabe for test case 
 node_modules - it is the heart 
 cyress-config.js - it will autogenrate when we use first time cypress
 when we open cypress  in setting we have all  option which we use in config.file  we can use that when required 


 prtice website - https://rahulshettyacademy.com/seleniumPractise/

 cypress support mainly css selector 

 auto suggetion in cypress -> /// <reference types= "cypress" />  

 command 
 visit()-> to visit any website
 get() -to  get locator
 type() - > to enter text 
 .should() -assersation 
 cy.wait()- to make wait 
 cy.log()- to print log()

 :visible-- to look for only visible element
 example
  cy.get('.product:visible')

find() - to limited the scope of locator to specfic locator
we have  .products locator in that we found .product

example
  cy.get('.products').find('.product')

eq() -Get A DOM element at a specific index in an array of elements
Example = 
  cy.get('.products').find('.product').eq(2).contains('ADD TO CART')
            .click()


cypess is built on node.js and it used js and it async ( all step not wait for other )

It is very important to understand that Cypress commands don't do anything at the moment they are invoked, but rather enqueue themselves to be run later. This is what we mean when we say Cypress commands are asynchronous


//Cypress queued all of these commands and now
// Cypress will begin running them in order!

cypress of asynchronous in nature  but it take care how to execute in order 

promise() -- it is state 
it have three type 
rejected  -state is rejected
reso state is completed
pending- > state  is yet to complete

to handle promise we have .then()

in cypress promise is hidden from us
if manipulate the cypress then it not handle the promise
example --> it retrun the text ( it hanlde the promise)
cy.get('.brand').text() - text() it is not cypress command and it not work direclty  we need to solve the promise 

text() -it is jquery command 
cypress can allow jquery but it cannot handle promise ( we need to manually solve it)
example 

   const logo = cy.get('.brand').then((logo) => {
            cy.log(logo.text())
   })

****************************************************************************
Date 6/8/2024
 allisa in cypress ising as() 
 alias - as()  we dfine as locator aslia and call the using 
            @alias- name ( check in line number 127)
            cy.get('.products').as('productLocator')
            cy.get('@productLocator').find('.product').eq(0).contains('ADD TO CART').click()

    

Cypress work directly on browser an it not use network proxy or json 
any log we print it print in console of browser

 console.log is not cypess command so it async and it can execute any time .it appear in console of browser ( press F12 and check in console tab of browser)
            console.log('Printing in console')

  to make them in sequence we need to manually solve the promise
 
 
 behavioral assertion

 should('be.checked')-it check it behaviour

 ****************************************************************************
Date 7/8/2024

popup handling popup 

cyress auto accept by itself no need write code 

cypress can listen the event happen in browser 
 window Event that happen when alert option
 window.alert this will fire when alert happen
 cypress can control dom and give our browser command 
 selenium cannot control dom 

 cy.on()  to handle event
  
  ***************************************************************************
Date 8/8/24
 to run only on test ( only one it block ) we have use -> .only
 it.only()

 cypress not support child window to pass control to them

 when any new page open by clicking  to link or tab in html code 
 one attribute call target which decide where the link one
 tagert-_blank - it open it new tab

if we able to remove this tag( target) in DOM at run time then page will open' 
in current widow  we need to use jquery 

****************************************************************************
Date 9/8/24
 
 how to handle web table in cypress 
****************************************************************************
date 10/8/2024
 not able to study 
****************************************************************************
date 11/8/2024
Incypress we have next() to get sibliing element 
eq()-->  we pass index to particular text and then we apply next()
     next() only work on get command  
     we have to solve the promise to get text() as it is 

Refer -Handling table in cyress test case in UI controls
_____________________________________________________________________________
 cypress dont have any method to handle mouse over 
  we have to use jquery show method  to call jquery show method we have to  use .invoke()
        
        cy.get('.mouse-hover-content').invoke('show')

 cypress have ability to click hindden element using 
      click({force:true})

        // to handle invisible element
        cy.contains('Top').click({ force: true })
       
refer - Mouse over in cyress - test case in UIcontrols

****************************************************************************
Grabbing the href  vlaue using prop() --> jquery command 

cy.get('#opentab').then((el) => {
    getting property value using prop() - it is jquery comand
            const url = el.prop('href')
            cy.log(url)
})

    refer- Getting url link from href attribute cypress in UIcontrols.js
****************************************************************************
Date 12/8/24
Frame is just one web page emebadded in another page
Handling frame

 we need plugin to work with frame in cypress 
 cypress-iframe
 we need to install npm install -D  cypress-iframe

 refer - Handling frames in  cypress
 ****************************************************************************
 Handling Calender in Cypress

 refer - Claneder handling in  cypress in UIcontrols.js 

 *****************************************************************************
 Date 13/8/24
 Framewrok section 

 1. test Hooks - > 
 2. Data driven using fixtures
 3. Build custom cypress command 
 4. Parametrized with muliple data setting
 5. Page object pattern 
 6. config changes 
 7. screenshot and video
 8.Env variable 
 9. Generate report 
 10. Cypress with jenkins CI 
11.API Testing using cypress

Test Hooks 
cypress test hooks taken from mocha 
test hooks are like anonation
*******************************************************************
date 14/8/24
not able to study
*********************************************************************
Date 15/8/2024
 before-- run  once before all it block
 after   run once after all it block execute
 beforeEach - run before each it block
 afterEach  run after each it block


cypress provide fixture  folder to handle external data 


when to use 
have and be 


working on behaviour -- use ----- >  be.
looking for property use --->   have


to create custom command 

cypress/support/Comamnd.js file 

1- selectProduct- -command name which we give
2- productName -arrgument name which we use in functon

Cypress.Commands.add('selectProduct', (productName) => {

    cy.get('div h4 a').each(($el, index, $list) => {
        if ($el.text().includes(productName)) {

            cy.get('.btn.btn-info').eq(index).click()
        }
    })
})


call the method 
simply calling custom command using command 
cy.<#custom Command name>
cy.selectProduct('Nokia Edge')
cy.selectProduct('Blackberry')


   // created productName as array in example.json (Fixture) calling each test date using forEach
        data.productName.forEach(function (element) {
            cy.selectProduct(element)
        });


to pause  and look the applciation and u can resume

 cy.pause()
 cy.debug()

 *******************************************************************************
 Date 27/8/2024
 cypress version upgrade 
 file name cypress.config.js

 all thing we need to add inside  defineConfig
 item added as key value pair
in config.js file 
key -without quotes 
value = should in quotes 

Cypress.config()
You can also override configuration values within your test using Cypress.config().

This changes the configuration for the remaining execution of the current spec file. The values will reset to the previous default values after the spec has complete.

Cypress.config('pageLoadTimeout', 100000)

Cypress.config('pageLoadTimeout') // => 100000

handling multiple  env varialbe in config file 
in confif file we have  object
env{
 url: "url where want to visit"
}

In test file call it using Cypress.env('url)

on terminal  we can define which env we like to run 
what url we want to use
npx cypress run --spec cypress/Integration/examples/hooksDemo.js  --env url=" https://rahulshettyacademy.com/angularpractice/" --headed


Date 28/8/2024
***************************************************
Reporting 

reporting utility - cypress mochawesome reporter 

it take it screenshot and video 
Link -https://www.npmjs.com/package/cypress-mochawesome-reporter

Step 1 :  install cypress-mochawesome-reporter

npm i --save-dev cypress-mochawesome-reporter

 Step 2 - >  In config file add 
 
  reporter: 'cypress-mochawesome-reporter', 

step 3 - setup event listener
   require('cypress-mochawesome-reporter/plugin')(on);

step 4: Add to cypress/support/e2e.js

import 'cypress-mochawesome-reporter/register';

step 5 -- to get report add retries 
 retries: {
    runMode: 1,
    openMode: 0,
  },

  step 6 - run the test case as command line 
  npx cypress run --spec cypress/Integration/examples/hooksDemo.js

**************************************************************************
package.json 

scripts -- > It is the place where we define custom command to exectue 
the test 
************************************************************************
Date 29/8/2024
scripts 

we define our custom command to run test 

example - 
 "test": "npx cypress run" 

 to run in command line 
 npm run test

 ******************************************************************************************
 Jenkins 
  plugins -> install plugin nodejs 
  tools - add node js using manage jenkins 
  
***************************************************

date - 14/11/2024

filter to  find the specific  element  when locator retun many results 



fitures -- to handle data in cypress 
we store data in fixture file and call in our cypress 
defaultCommandTimeOut: - default time out in cypress is 4 second (4000 mili second )
it is global time out 

in test we have specific time out we call defaultCommandTimeOut in our test with below syntax

Cypress.config('defaultCommandTimeOut',10000)


page object design pattern  is most common in test framework

locator should be not in code 

cy.pause()-> debug 
cy.log()-to get logo


 npx cypress run --spec cypress\Integration\examples\End2EndFlow.js 
 
 --headed 
 --browser chrome 
 
  --env url="https://rahulshettyacademy.com"

  reporting cypress mochawesome-reporter 


   retries: {
    runMode: 1,
    openMode: 0,
   }

  









